#!/usr/bin/env bash

DOCKER_IMAGE=bkaney/ig-publisher-base

# NOTE: Next time they push, we can use this one
# DOCKER_IMAGE=hl7fhir/ig-publisher-base

# Test for windows, git-bash, cygwin
if [[ $(uname -a) == MINGW* ]]; then
  export MYSY_NO_PATHCONV=1

  if [[ \'"$(pwd)"\' == \'"$(echo $HOME)"\' ]]; then
    echo Cannot run from your home directory on windows, make a subdirectory
    echo and try again.
    exit 1
  fi
fi


setup_directories() {
  mkdir -p "$HOME/.ig-publisher-cache/.gradle"
  mkdir -p "$HOME/.ig-publisher-cache/.fhir"
  mkdir -p "$HOME/.ig-publisher-cache/.node"
}

refresh() {
  rm -rf "$HOME/.ig-publisher-cache/.gradle"
  rm -rf "$HOME/.ig-publisher-cache/.fhir"
  rm -rf "$HOME/.ig-publisher-cache/.node"

  setup_directories

  docker pull $DOCKER_IMAGE
}

fixup_ig_scripts() {
  [[ -e "./_genonce.sh" ]] && sed -i '' 's/java -jar/java $JAVA_OPTS -jar/' ./_genonce.sh
}

run_docker() {

docker run --rm -it \
  -e JAVA_OPTS="-Xmx2048m -Xms2048m" \
  -v "$HOME/.ig-publisher-cache/.fhir":/home/publisher/.fhir \
  -v "$HOME/.ig-publisher-cache/.gradle":/home/publisher/.gradle \
  -v "$HOME/.ig-publisher-cache/.node":/home/publisher/.node \
  -v "$(pwd)":/home/publisher/ig \
  $DOCKER_IMAGE \
  "$@"

}

run_publisher() {

  if [[ ! -f "./input-cache/publisher.jar" ]]; then
    echo "* Installing publisher (force)"
    ( run_docker ./_updatePublisher.sh -f )
  fi

  if [ $? -ne 0 ] ; then
    echo "!!! Error updating publisher"
    exit 1
  fi

  echo "* Running IG Publisher"
  ( run_docker ./_genonce.sh )

  if [ $? -ne 0 ] ; then
    echo "!!! Error running publisher"
    exit 1
  fi

}

#
# Program flow...
#

setup_directories
fixup_ig_scripts

if [[ $1 =~ ^(publish)$ ]]; then

  run_publisher

elif [[ $1 =~ (refresh|-r)$ ]]; then

  refresh

elif [[ $1 =~ (help|\-h)$ ]]; then

  read -r -d '' HELP <<-'EOF'

Usage: nori <COMMAND>

A wrapper around IG Publisher and related tools.

--

Commands:
  publish:  runs the IG Publisher
  sushi:    runs the sushi command
  refresh:  delete cache and pull ig publisher docker image

NOTE: You can also run any command directly:

> nori ./_updatePublisher.sh

The program also makes a few caching directories
~/.ig-publisher-cache/.fhir
~/.ig-publisher-cache/.gradle and
~/.ig-publisher-cache/.node

--

Examples:

> nori help
> nori sushi --init
> nori sushi
> nori publish

EOF

  echo
  echo "$HELP"
  echo

else

  run_docker $@

fi
